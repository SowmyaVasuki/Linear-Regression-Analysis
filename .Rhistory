knitr::opts_chunk$set(echo = TRUE)
install.packages('caret')
require(mosaic)
require(caret)
lm0 <- lm(critical_temp ~ entropy_atomic_mass, data=x, subset=(resid(lm0) < 110 & resid(lm0) < -65))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, data=sconduct, subset=(resid(lm0) < 110 & resid(lm0) < -65))
knitr::opts_chunk$set(echo = TRUE)
install.packages('caret')
require(mosaic)
require(caret)
sconduct <- read.csv('C:/Users/disha/OneDrive/Desktop/501/final project/superconduct/train.csv')
ncol(sconduct)
sconduct_x <- subset(sconduct, select = -critical_temp)
sconduct_y <- sconduct['critical_temp']
names_col = names(sconduct)
names_col
library('caret')
df2 = cor(sconduct)
df2 = df2[,82] # only select correlation with critical temp
install.packages("caret")
df2 = sort(df2, decreasing = TRUE)
df2
bwplot(~entropy_atomic_mass, data=sconduct)
bwplot(~wtd_std_atomic_radius, data=sconduct)
bwplot(~wtd_entropy_FusionHeat, data=sconduct)
bwplot(~wtd_entropy_Valence, data=sconduct)
bwplot(~wtd_range_ThermalConductivity, data=sconduct)
xyplot(critical_temp ~ entropy_atomic_mass, data=sconduct)
xyplot(critical_temp ~ wtd_std_atomic_radius, data=sconduct)
xyplot(critical_temp ~ wtd_entropy_FusionHeat, data=sconduct)
xyplot(critical_temp ~ wtd_entropy_Valence, data=sconduct)
xyplot(critical_temp ~ wtd_range_ThermalConductivity, data=sconduct)
# entropy_atomic_mass
xyplot(critical_temp ~ entropy_atomic_mass, sconduct, type=c("p", "r"))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, sconduct)
summary(lm0)
# wtd_std_atomic_radius
xyplot(critical_temp ~ wtd_std_atomic_radius, sconduct, type=c("p", "r"))
lm1 <- lm(critical_temp ~ wtd_std_atomic_radius, sconduct)
summary(lm1)
# wtd_entropy_FusionHeat
xyplot(critical_temp ~ wtd_entropy_FusionHeat, sconduct, type=c("p", "r"))
lm2 <- lm(critical_temp ~ wtd_entropy_FusionHeat, sconduct)
summary(lm2)
# wtd_entropy_Valence
xyplot(critical_temp ~ wtd_entropy_Valence, sconduct, type=c("p", "r"))
lm3 <- lm(critical_temp ~ wtd_entropy_Valence, sconduct)
summary(lm3)
# wtd_entropy_atomic_mass
xyplot(critical_temp ~ wtd_range_ThermalConductivity, sconduct, type=c("p", "r"))
lm4 <- lm(critical_temp ~ wtd_range_ThermalConductivity, sconduct)
summary(lm4)
par(mfrow=c(5, 2))
histogram(~ residuals(lm0), nint=10)
xqqmath(~resid(lm0))
histogram(~ residuals(lm1), nint=10)
xqqmath(~resid(lm1))
histogram(~ residuals(lm2), nint=10)
xqqmath(~resid(lm2))
histogram(~ residuals(lm3), nint=10)
xqqmath(~resid(lm3))
histogram(~ residuals(lm4), nint=10)
xqqmath(~resid(lm4))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, data=sconduct, subset=(resid(lm0) < 110 & resid(lm0) < -65))
summary(lm0)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
par(mfrow=c(5, 2))
histogram(~ residuals(lm0), nint=10)
xqqmath(~resid(lm0))
histogram(~ residuals(lm1), nint=10)
xqqmath(~resid(lm1))
histogram(~ residuals(lm2), nint=10)
xqqmath(~resid(lm2))
histogram(~ residuals(lm3), nint=10)
xqqmath(~resid(lm3))
histogram(~ residuals(lm4), nint=10)
xqqmath(~resid(lm4))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, data=sconduct, subset=(resid(lm0) < 110 & resid(lm0) < -65))
lm_0 <- lm(critical_temp ~ entropy_atomic_mass, data=sconduct, subset=(resid(lm0) < 110 & resid(lm0) < -65))
xyplot(residuals(lm0) ~ fitted(lm0), type=c("p", "r"))
xyplot(residuals(lm1) ~ fitted(lm1), type=c("p", "r"))
xyplot(residuals(lm2) ~ fitted(lm2), type=c("p", "r"))
xyplot(residuals(lm3) ~ fitted(lm3), type=c("p", "r"))
xyplot(residuals(lm4) ~ fitted(lm4), type=c("p", "r"))
xyplot(critical_temp ~ range_ElectronAffinity, data=sconduct)
xyplot(critical_temp ~ wtd_gmean_Valence, data=sconduct)
xyplot(critical_temp ~ wtd_mean_Valence, data=sconduct)
# Don't delete this chunk if you are using the mosaic package
# This loads the mosaic and dplyr packages
require(mosaic)
# knitr settings to control how R chunks work.
require(knitr)
opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small"    # slightly smaller font for code
)
# This loads the mosaic data sets.  (Could be deleted if you are not using them.)
require(mosaicData)
install.packages('caret')
require(caret)
sconduct <- read.csv('C:/Users/disha/OneDrive/Desktop/501/final project/superconduct/train.csv')
ncol(sconduct)
sconduct_x <- subset(sconduct, select = -critical_temp)
sconduct_y <- sconduct['critical_temp']
names_col = names(sconduct)
names_col
library('caret')
df2 = cor(sconduct)
df2 = df2[,82] # only select correlation with critical temp
df2 = sort(df2, decreasing = TRUE)
df2
bwplot(~entropy_atomic_mass, data=sconduct)
bwplot(~wtd_std_atomic_radius, data=sconduct)
bwplot(~wtd_entropy_FusionHeat, data=sconduct)
bwplot(~wtd_entropy_Valence, data=sconduct)
bwplot(~wtd_range_ThermalConductivity, data=sconduct)
xyplot(critical_temp ~ entropy_atomic_mass, data=sconduct)
xyplot(critical_temp ~ wtd_std_atomic_radius, data=sconduct)
xyplot(critical_temp ~ wtd_entropy_FusionHeat, data=sconduct)
xyplot(critical_temp ~ wtd_entropy_Valence, data=sconduct)
xyplot(critical_temp ~ wtd_range_ThermalConductivity, data=sconduct)
# entropy_atomic_mass
xyplot(critical_temp ~ entropy_atomic_mass, sconduct, type=c("p", "r"))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, sconduct)
summary(lm0)
# wtd_std_atomic_radius
xyplot(critical_temp ~ wtd_std_atomic_radius, sconduct, type=c("p", "r"))
lm1 <- lm(critical_temp ~ wtd_std_atomic_radius, sconduct)
summary(lm1)
# wtd_entropy_FusionHeat
xyplot(critical_temp ~ wtd_entropy_FusionHeat, sconduct, type=c("p", "r"))
lm2 <- lm(critical_temp ~ wtd_entropy_FusionHeat, sconduct)
summary(lm2)
# wtd_entropy_Valence
xyplot(critical_temp ~ wtd_entropy_Valence, sconduct, type=c("p", "r"))
lm3 <- lm(critical_temp ~ wtd_entropy_Valence, sconduct)
summary(lm3)
# wtd_entropy_atomic_mass
xyplot(critical_temp ~ wtd_range_ThermalConductivity, sconduct, type=c("p", "r"))
lm4 <- lm(critical_temp ~ wtd_range_ThermalConductivity, sconduct)
summary(lm4)
par(mfrow=c(5, 2))
histogram(~ residuals(lm0), nint=10)
xqqmath(~resid(lm0))
histogram(~ residuals(lm1), nint=10)
xqqmath(~resid(lm1))
histogram(~ residuals(lm2), nint=10)
xqqmath(~resid(lm2))
histogram(~ residuals(lm3), nint=10)
xqqmath(~resid(lm3))
histogram(~ residuals(lm4), nint=10)
xqqmath(~resid(lm4))
xyplot(residuals(lm0) ~ fitted(lm0), type=c("p", "r"))
xyplot(residuals(lm1) ~ fitted(lm1), type=c("p", "r"))
xyplot(residuals(lm2) ~ fitted(lm2), type=c("p", "r"))
xyplot(residuals(lm3) ~ fitted(lm3), type=c("p", "r"))
xyplot(residuals(lm4) ~ fitted(lm4), type=c("p", "r"))
# Don't delete this chunk if you are using the mosaic package
# This loads the mosaic and dplyr packages
install.packages('caret')
require(mosaic)
install.packages("caret")
xyplot(critical_temp ~ entropy_atomic_mass, sconduct, type=c("p", "r"), col = c("orange"))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, sconduct)
summary(lm0)
xyplot(critical_temp ~ entropy_atomic_mass, sconduct, type=c("p", "r"), col = c("orange", "blue"))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, sconduct)
summary(lm0)
# Don't delete this chunk if you are using the mosaic package
# This loads the mosaic and dplyr packages
require(mosaic)
# knitr settings to control how R chunks work.
require(knitr)
opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small"    # slightly smaller font for code
)
# This loads the mosaic data sets.  (Could be deleted if you are not using them.)
require(mosaicData)
sconduct <- read.csv('C:/Users/disha/OneDrive/Desktop/501/final project/superconduct/train.csv')
ncol(sconduct)
sconduct_x <- subset(sconduct, select = -critical_temp)
sconduct_y <- sconduct['critical_temp']
names_col = names(sconduct)
names_col
df2 = cor(sconduct)
df2 = df2[,82] # only select correlation with critical temp
df2 = sort(df2, decreasing = TRUE)
df2
bwplot(~entropy_atomic_mass, data=sconduct)
bwplot(~wtd_std_atomic_radius, data=sconduct)
bwplot(~wtd_entropy_FusionHeat, data=sconduct)
bwplot(~wtd_entropy_Valence, data=sconduct)
bwplot(~wtd_range_ThermalConductivity, data=sconduct)
xyplot(critical_temp ~ entropy_atomic_mass, data=sconduct)
xyplot(critical_temp ~ wtd_std_atomic_radius, data=sconduct)
xyplot(critical_temp ~ wtd_entropy_FusionHeat, data=sconduct)
xyplot(critical_temp ~ wtd_entropy_Valence, data=sconduct)
xyplot(critical_temp ~ wtd_range_ThermalConductivity, data=sconduct)
# entropy_atomic_mass
xyplot(critical_temp ~ entropy_atomic_mass, sconduct, type=c("p", "r"))
lm0 <- lm(critical_temp ~ entropy_atomic_mass, sconduct)
summary(lm0)
# wtd_std_atomic_radius
xyplot(critical_temp ~ wtd_std_atomic_radius, sconduct, type=c("p", "r"))
lm1 <- lm(critical_temp ~ wtd_std_atomic_radius, sconduct)
summary(lm1)
# wtd_entropy_FusionHeat
xyplot(critical_temp ~ wtd_entropy_FusionHeat, sconduct, type=c("p", "r"))
lm2 <- lm(critical_temp ~ wtd_entropy_FusionHeat, sconduct)
summary(lm2)
# wtd_entropy_Valence
xyplot(critical_temp ~ wtd_entropy_Valence, sconduct, type=c("p", "r"))
lm3 <- lm(critical_temp ~ wtd_entropy_Valence, sconduct)
summary(lm3)
# wtd_entropy_atomic_mass
xyplot(critical_temp ~ wtd_range_ThermalConductivity, sconduct, type=c("p", "r"))
lm4 <- lm(critical_temp ~ wtd_range_ThermalConductivity, sconduct)
summary(lm4)
par(mfrow=c(5, 2))
histogram(~ residuals(lm0), nint=10)
xqqmath(~resid(lm0))
histogram(~ residuals(lm1), nint=10)
xqqmath(~resid(lm1))
histogram(~ residuals(lm2), nint=10)
xqqmath(~resid(lm2))
histogram(~ residuals(lm3), nint=10)
xqqmath(~resid(lm3))
histogram(~ residuals(lm4), nint=10)
xqqmath(~resid(lm4))
xyplot(residuals(lm0) ~ fitted(lm0), type=c("p", "r"))
xyplot(residuals(lm1) ~ fitted(lm1), type=c("p", "r"))
xyplot(residuals(lm2) ~ fitted(lm2), type=c("p", "r"))
xyplot(residuals(lm3) ~ fitted(lm3), type=c("p", "r"))
xyplot(residuals(lm4) ~ fitted(lm4), type=c("p", "r"))
